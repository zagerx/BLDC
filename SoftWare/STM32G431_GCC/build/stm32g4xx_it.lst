ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32g4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB329:
  28              		.file 1 "Src/stm32g4xx_it.c"
   1:Src/stm32g4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g4xx_it.c **** /**
   3:Src/stm32g4xx_it.c ****   ******************************************************************************
   4:Src/stm32g4xx_it.c ****   * @file    stm32g4xx_it.c
   5:Src/stm32g4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g4xx_it.c ****   ******************************************************************************
   7:Src/stm32g4xx_it.c ****   * @attention
   8:Src/stm32g4xx_it.c ****   *
   9:Src/stm32g4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/stm32g4xx_it.c ****   * All rights reserved.
  11:Src/stm32g4xx_it.c ****   *
  12:Src/stm32g4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32g4xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32g4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32g4xx_it.c ****   *
  16:Src/stm32g4xx_it.c ****   ******************************************************************************
  17:Src/stm32g4xx_it.c ****   */
  18:Src/stm32g4xx_it.c **** /* USER CODE END Header */
  19:Src/stm32g4xx_it.c **** 
  20:Src/stm32g4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32g4xx_it.c **** #include "main.h"
  22:Src/stm32g4xx_it.c **** #include "stm32g4xx_it.h"
  23:Src/stm32g4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32g4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32g4xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32g4xx_it.c **** 
  27:Src/stm32g4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32g4xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32g4xx_it.c **** 
  30:Src/stm32g4xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 2


  31:Src/stm32g4xx_it.c **** 
  32:Src/stm32g4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32g4xx_it.c **** 
  35:Src/stm32g4xx_it.c **** /* USER CODE END PD */
  36:Src/stm32g4xx_it.c **** 
  37:Src/stm32g4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32g4xx_it.c **** 
  40:Src/stm32g4xx_it.c **** /* USER CODE END PM */
  41:Src/stm32g4xx_it.c **** 
  42:Src/stm32g4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32g4xx_it.c **** 
  45:Src/stm32g4xx_it.c **** /* USER CODE END PV */
  46:Src/stm32g4xx_it.c **** 
  47:Src/stm32g4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32g4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32g4xx_it.c **** 
  50:Src/stm32g4xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32g4xx_it.c **** 
  52:Src/stm32g4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32g4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32g4xx_it.c **** 
  55:Src/stm32g4xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32g4xx_it.c **** 
  57:Src/stm32g4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32g4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  59:Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  60:Src/stm32g4xx_it.c **** extern UART_HandleTypeDef huart1;
  61:Src/stm32g4xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32g4xx_it.c **** extern void USER_UART_IRQHandler(UART_HandleTypeDef *huart);
  63:Src/stm32g4xx_it.c **** /* USER CODE END EV */
  64:Src/stm32g4xx_it.c **** 
  65:Src/stm32g4xx_it.c **** /******************************************************************************/
  66:Src/stm32g4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  67:Src/stm32g4xx_it.c **** /******************************************************************************/
  68:Src/stm32g4xx_it.c **** /**
  69:Src/stm32g4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32g4xx_it.c ****   */
  71:Src/stm32g4xx_it.c **** void NMI_Handler(void)
  72:Src/stm32g4xx_it.c **** {
  29              		.loc 1 72 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  73:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32g4xx_it.c **** 
  75:Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32g4xx_it.c ****   while (1)
  36              		.loc 1 77 3 discriminator 1 view .LVU1
  78:Src/stm32g4xx_it.c ****   {
  79:Src/stm32g4xx_it.c ****   }
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 3


  37              		.loc 1 79 3 discriminator 1 view .LVU2
  77:Src/stm32g4xx_it.c ****   {
  38              		.loc 1 77 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE329:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB330:
  80:Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32g4xx_it.c **** }
  82:Src/stm32g4xx_it.c **** 
  83:Src/stm32g4xx_it.c **** /**
  84:Src/stm32g4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32g4xx_it.c ****   */
  86:Src/stm32g4xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32g4xx_it.c **** {
  52              		.loc 1 87 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  88:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32g4xx_it.c **** 
  90:Src/stm32g4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32g4xx_it.c ****   while (1)
  59              		.loc 1 91 3 discriminator 1 view .LVU5
  92:Src/stm32g4xx_it.c ****   {
  93:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32g4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32g4xx_it.c ****   }
  60              		.loc 1 95 3 discriminator 1 view .LVU6
  91:Src/stm32g4xx_it.c ****   {
  61              		.loc 1 91 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE330:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB331:
  96:Src/stm32g4xx_it.c **** }
  97:Src/stm32g4xx_it.c **** 
  98:Src/stm32g4xx_it.c **** /**
  99:Src/stm32g4xx_it.c ****   * @brief This function handles Memory management fault.
 100:Src/stm32g4xx_it.c ****   */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 4


 101:Src/stm32g4xx_it.c **** void MemManage_Handler(void)
 102:Src/stm32g4xx_it.c **** {
  75              		.loc 1 102 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 103:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Src/stm32g4xx_it.c **** 
 105:Src/stm32g4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Src/stm32g4xx_it.c ****   while (1)
  82              		.loc 1 106 3 discriminator 1 view .LVU9
 107:Src/stm32g4xx_it.c ****   {
 108:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Src/stm32g4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Src/stm32g4xx_it.c ****   }
  83              		.loc 1 110 3 discriminator 1 view .LVU10
 106:Src/stm32g4xx_it.c ****   {
  84              		.loc 1 106 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE331:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB332:
 111:Src/stm32g4xx_it.c **** }
 112:Src/stm32g4xx_it.c **** 
 113:Src/stm32g4xx_it.c **** /**
 114:Src/stm32g4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 115:Src/stm32g4xx_it.c ****   */
 116:Src/stm32g4xx_it.c **** void BusFault_Handler(void)
 117:Src/stm32g4xx_it.c **** {
  98              		.loc 1 117 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 118:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Src/stm32g4xx_it.c **** 
 120:Src/stm32g4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Src/stm32g4xx_it.c ****   while (1)
 105              		.loc 1 121 3 discriminator 1 view .LVU13
 122:Src/stm32g4xx_it.c ****   {
 123:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Src/stm32g4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Src/stm32g4xx_it.c ****   }
 106              		.loc 1 125 3 discriminator 1 view .LVU14
 121:Src/stm32g4xx_it.c ****   {
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 5


 107              		.loc 1 121 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE332:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB333:
 126:Src/stm32g4xx_it.c **** }
 127:Src/stm32g4xx_it.c **** 
 128:Src/stm32g4xx_it.c **** /**
 129:Src/stm32g4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Src/stm32g4xx_it.c ****   */
 131:Src/stm32g4xx_it.c **** void UsageFault_Handler(void)
 132:Src/stm32g4xx_it.c **** {
 121              		.loc 1 132 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 133:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Src/stm32g4xx_it.c **** 
 135:Src/stm32g4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Src/stm32g4xx_it.c ****   while (1)
 128              		.loc 1 136 3 discriminator 1 view .LVU17
 137:Src/stm32g4xx_it.c ****   {
 138:Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Src/stm32g4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Src/stm32g4xx_it.c ****   }
 129              		.loc 1 140 3 discriminator 1 view .LVU18
 136:Src/stm32g4xx_it.c ****   {
 130              		.loc 1 136 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE333:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB334:
 141:Src/stm32g4xx_it.c **** }
 142:Src/stm32g4xx_it.c **** 
 143:Src/stm32g4xx_it.c **** /**
 144:Src/stm32g4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Src/stm32g4xx_it.c ****   */
 146:Src/stm32g4xx_it.c **** void SVC_Handler(void)
 147:Src/stm32g4xx_it.c **** {
 144              		.loc 1 147 1 view -0
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 6


 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 148:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:Src/stm32g4xx_it.c **** 
 150:Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 152:Src/stm32g4xx_it.c **** 
 153:Src/stm32g4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:Src/stm32g4xx_it.c **** }
 149              		.loc 1 154 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE334:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB335:
 155:Src/stm32g4xx_it.c **** 
 156:Src/stm32g4xx_it.c **** /**
 157:Src/stm32g4xx_it.c ****   * @brief This function handles Debug monitor.
 158:Src/stm32g4xx_it.c ****   */
 159:Src/stm32g4xx_it.c **** void DebugMon_Handler(void)
 160:Src/stm32g4xx_it.c **** {
 163              		.loc 1 160 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 161:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Src/stm32g4xx_it.c **** 
 163:Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Src/stm32g4xx_it.c **** 
 166:Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Src/stm32g4xx_it.c **** }
 168              		.loc 1 167 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE335:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB336:
 168:Src/stm32g4xx_it.c **** 
 169:Src/stm32g4xx_it.c **** /**
 170:Src/stm32g4xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Src/stm32g4xx_it.c ****   */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 7


 172:Src/stm32g4xx_it.c **** void PendSV_Handler(void)
 173:Src/stm32g4xx_it.c **** {
 182              		.loc 1 173 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 174:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:Src/stm32g4xx_it.c **** 
 176:Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Src/stm32g4xx_it.c **** 
 179:Src/stm32g4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Src/stm32g4xx_it.c **** }
 187              		.loc 1 180 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE336:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB337:
 181:Src/stm32g4xx_it.c **** 
 182:Src/stm32g4xx_it.c **** /**
 183:Src/stm32g4xx_it.c ****   * @brief This function handles System tick timer.
 184:Src/stm32g4xx_it.c ****   */
 185:Src/stm32g4xx_it.c **** void SysTick_Handler(void)
 186:Src/stm32g4xx_it.c **** {
 201              		.loc 1 186 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 187:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Src/stm32g4xx_it.c **** 
 189:Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Src/stm32g4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 190 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 191:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Src/stm32g4xx_it.c **** 
 193:Src/stm32g4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Src/stm32g4xx_it.c **** }
 213              		.loc 1 194 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE337:
 218              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 8


 219              		.align	1
 220              		.global	DMA1_Channel2_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	DMA1_Channel2_IRQHandler:
 226              	.LFB338:
 195:Src/stm32g4xx_it.c **** 
 196:Src/stm32g4xx_it.c **** /******************************************************************************/
 197:Src/stm32g4xx_it.c **** /* STM32G4xx Peripheral Interrupt Handlers                                    */
 198:Src/stm32g4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Src/stm32g4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Src/stm32g4xx_it.c **** /* please refer to the startup file (startup_stm32g4xx.s).                    */
 201:Src/stm32g4xx_it.c **** /******************************************************************************/
 202:Src/stm32g4xx_it.c **** 
 203:Src/stm32g4xx_it.c **** /**
 204:Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 205:Src/stm32g4xx_it.c ****   */
 206:Src/stm32g4xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 207:Src/stm32g4xx_it.c **** {
 227              		.loc 1 207 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 208:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 209:Src/stm32g4xx_it.c **** 
 210:Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 211:Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 236              		.loc 1 211 3 view .LVU30
 237 0002 0248     		ldr	r0, .L18
 238 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 239              	.LVL1:
 212:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 213:Src/stm32g4xx_it.c **** 
 214:Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 215:Src/stm32g4xx_it.c **** }
 240              		.loc 1 215 1 is_stmt 0 view .LVU31
 241 0008 08BD     		pop	{r3, pc}
 242              	.L19:
 243 000a 00BF     		.align	2
 244              	.L18:
 245 000c 00000000 		.word	hdma_usart1_tx
 246              		.cfi_endproc
 247              	.LFE338:
 249              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	ADC1_2_IRQHandler
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	ADC1_2_IRQHandler:
 257              	.LFB339:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 9


 216:Src/stm32g4xx_it.c **** 
 217:Src/stm32g4xx_it.c **** /**
 218:Src/stm32g4xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupt.
 219:Src/stm32g4xx_it.c ****   */
 220:Src/stm32g4xx_it.c **** void ADC1_2_IRQHandler(void)
 221:Src/stm32g4xx_it.c **** {
 258              		.loc 1 221 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI2:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 222:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 0 */
 223:Src/stm32g4xx_it.c **** 
 224:Src/stm32g4xx_it.c ****   /* USER CODE END ADC1_2_IRQn 0 */
 225:Src/stm32g4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 267              		.loc 1 225 3 view .LVU33
 268 0002 0248     		ldr	r0, .L22
 269 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 270              	.LVL2:
 226:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN ADC1_2_IRQn 1 */
 227:Src/stm32g4xx_it.c **** 
 228:Src/stm32g4xx_it.c ****   /* USER CODE END ADC1_2_IRQn 1 */
 229:Src/stm32g4xx_it.c **** }
 271              		.loc 1 229 1 is_stmt 0 view .LVU34
 272 0008 08BD     		pop	{r3, pc}
 273              	.L23:
 274 000a 00BF     		.align	2
 275              	.L22:
 276 000c 00000000 		.word	hadc1
 277              		.cfi_endproc
 278              	.LFE339:
 280              		.section	.text.USART1_IRQHandler,"ax",%progbits
 281              		.align	1
 282              		.global	USART1_IRQHandler
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	USART1_IRQHandler:
 288              	.LFB340:
 230:Src/stm32g4xx_it.c **** 
 231:Src/stm32g4xx_it.c **** /**
 232:Src/stm32g4xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI li
 233:Src/stm32g4xx_it.c ****   */
 234:Src/stm32g4xx_it.c **** void USART1_IRQHandler(void)
 235:Src/stm32g4xx_it.c **** {
 289              		.loc 1 235 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 10B5     		push	{r4, lr}
 294              	.LCFI3:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 4, -8
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 10


 297              		.cfi_offset 14, -4
 236:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 237:Src/stm32g4xx_it.c **** 
 238:Src/stm32g4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 239:Src/stm32g4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 298              		.loc 1 239 3 view .LVU36
 299 0002 044C     		ldr	r4, .L26
 300 0004 2046     		mov	r0, r4
 301 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 302              	.LVL3:
 240:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 241:Src/stm32g4xx_it.c ****     USER_UART_IRQHandler(&huart1);
 303              		.loc 1 241 5 view .LVU37
 304 000a 2046     		mov	r0, r4
 305 000c FFF7FEFF 		bl	USER_UART_IRQHandler
 306              	.LVL4:
 242:Src/stm32g4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 243:Src/stm32g4xx_it.c **** }
 307              		.loc 1 243 1 is_stmt 0 view .LVU38
 308 0010 10BD     		pop	{r4, pc}
 309              	.L27:
 310 0012 00BF     		.align	2
 311              	.L26:
 312 0014 00000000 		.word	huart1
 313              		.cfi_endproc
 314              	.LFE340:
 316              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 317              		.align	1
 318              		.global	EXTI15_10_IRQHandler
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	EXTI15_10_IRQHandler:
 324              	.LFB341:
 244:Src/stm32g4xx_it.c **** 
 245:Src/stm32g4xx_it.c **** /**
 246:Src/stm32g4xx_it.c ****   * @brief This function handles EXTI line[15:10] interrupts.
 247:Src/stm32g4xx_it.c ****   */
 248:Src/stm32g4xx_it.c **** void EXTI15_10_IRQHandler(void)
 249:Src/stm32g4xx_it.c **** {
 325              		.loc 1 249 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI4:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
 250:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 251:Src/stm32g4xx_it.c **** 
 252:Src/stm32g4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 253:Src/stm32g4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(KEY_01_Pin);
 334              		.loc 1 253 3 view .LVU40
 335 0002 4FF48050 		mov	r0, #4096
 336 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 337              	.LVL5:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 11


 254:Src/stm32g4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 255:Src/stm32g4xx_it.c **** 
 256:Src/stm32g4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 257:Src/stm32g4xx_it.c **** }
 338              		.loc 1 257 1 is_stmt 0 view .LVU41
 339 000a 08BD     		pop	{r3, pc}
 340              		.cfi_endproc
 341              	.LFE341:
 343              		.text
 344              	.Letext0:
 345              		.file 2 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 346              		.file 3 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 347              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 348              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 349              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 350              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 351              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 352              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 353              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 354              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g4xx_it.c
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:20     .text.NMI_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:136    .text.SVC_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:142    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:155    .text.DebugMon_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:174    .text.PendSV_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:193    .text.SysTick_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:219    .text.DMA1_Channel2_IRQHandler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:225    .text.DMA1_Channel2_IRQHandler:00000000 DMA1_Channel2_IRQHandler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:245    .text.DMA1_Channel2_IRQHandler:0000000c $d
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:250    .text.ADC1_2_IRQHandler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:256    .text.ADC1_2_IRQHandler:00000000 ADC1_2_IRQHandler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:276    .text.ADC1_2_IRQHandler:0000000c $d
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:281    .text.USART1_IRQHandler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:287    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:312    .text.USART1_IRQHandler:00000014 $d
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:317    .text.EXTI15_10_IRQHandler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccsBl52z.s:323    .text.EXTI15_10_IRQHandler:00000000 EXTI15_10_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart1_tx
HAL_ADC_IRQHandler
hadc1
HAL_UART_IRQHandler
USER_UART_IRQHandler
huart1
HAL_GPIO_EXTI_IRQHandler

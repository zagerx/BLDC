ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	Error_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	Error_Handler:
  26              	.LFB352:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "adc.h"
  22:Src/main.c    **** #include "tim.h"
  23:Src/main.c    **** #include "gpio.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** /* USER CODE BEGIN PFP */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN 0 */
  58:Src/main.c    **** 
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /**
  63:Src/main.c    ****   * @brief  The application entry point.
  64:Src/main.c    ****   * @retval int
  65:Src/main.c    ****   */
  66:Src/main.c    **** int main(void)
  67:Src/main.c    **** {
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE END 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Src/main.c    ****   HAL_Init();
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE BEGIN Init */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE END Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Configure the system clock */
  82:Src/main.c    ****   SystemClock_Config();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Initialize all configured peripherals */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 3


  89:Src/main.c    ****   MX_GPIO_Init();
  90:Src/main.c    ****   MX_ADC3_Init();
  91:Src/main.c    ****   MX_TIM8_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    ****   HAL_ADCEx_Calibration_Start(&hadc3,ADC_CALIB_OFFSET,ADC_SINGLE_ENDED);
  94:Src/main.c    ****   HAL_GPIO_WritePin(EBAKE_PWM_EN_GPIO_Port,EBAKE_PWM_EN_Pin,GPIO_PIN_SET);
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END 2 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Infinite loop */
  99:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 100:Src/main.c    ****   while (1)
 101:Src/main.c    ****   {
 102:Src/main.c    ****    HAL_GPIO_TogglePin(LED_01_GPIO_Port,LED_01_Pin);
 103:Src/main.c    **** 
 104:Src/main.c    ****     HAL_GPIO_TogglePin(WATCHDOG_IN_GPIO_Port,WATCHDOG_IN_Pin);
 105:Src/main.c    ****     HAL_Delay(100);
 106:Src/main.c    **** 
 107:Src/main.c    ****     adc_pollvale();
 108:Src/main.c    ****     
 109:Src/main.c    ****     /* USER CODE END WHILE */
 110:Src/main.c    **** 
 111:Src/main.c    ****     /* USER CODE BEGIN 3 */
 112:Src/main.c    ****   }
 113:Src/main.c    ****   /* USER CODE END 3 */
 114:Src/main.c    **** }
 115:Src/main.c    **** 
 116:Src/main.c    **** /**
 117:Src/main.c    ****   * @brief System Clock Configuration
 118:Src/main.c    ****   * @retval None
 119:Src/main.c    ****   */
 120:Src/main.c    **** void SystemClock_Config(void)
 121:Src/main.c    **** {
 122:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 123:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124:Src/main.c    **** 
 125:Src/main.c    ****   /** Supply configuration update enable
 126:Src/main.c    ****   */
 127:Src/main.c    ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 128:Src/main.c    **** 
 129:Src/main.c    ****   /** Configure the main internal regulator output voltage
 130:Src/main.c    ****   */
 131:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 132:Src/main.c    **** 
 133:Src/main.c    ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 134:Src/main.c    **** 
 135:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 136:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 137:Src/main.c    ****   */
 138:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 34;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 1;
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 4


 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152:Src/main.c    ****   {
 153:Src/main.c    ****     Error_Handler();
 154:Src/main.c    ****   }
 155:Src/main.c    **** 
 156:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 157:Src/main.c    ****   */
 158:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 160:Src/main.c    ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 161:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 162:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 163:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 164:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 165:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 166:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 167:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 168:Src/main.c    **** 
 169:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 170:Src/main.c    ****   {
 171:Src/main.c    ****     Error_Handler();
 172:Src/main.c    ****   }
 173:Src/main.c    **** }
 174:Src/main.c    **** 
 175:Src/main.c    **** /* USER CODE BEGIN 4 */
 176:Src/main.c    **** 
 177:Src/main.c    **** /* USER CODE END 4 */
 178:Src/main.c    **** 
 179:Src/main.c    **** /**
 180:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 181:Src/main.c    ****   * @retval None
 182:Src/main.c    ****   */
 183:Src/main.c    **** void Error_Handler(void)
 184:Src/main.c    **** {
  28              		.loc 1 184 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 185:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 186:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 187:Src/main.c    ****   __disable_irq();
  34              		.loc 1 187 3 view .LVU1
  35              	.LBB4:
  36              	.LBI4:
  37              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 5


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 6


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 7


 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 8


 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  38              		.loc 2 207 27 view .LVU2
  39              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  40              		.loc 2 209 3 view .LVU3
  41              		.syntax unified
  42              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  43 0000 72B6     		cpsid i
  44              	@ 0 "" 2
  45              		.thumb
  46              		.syntax unified
  47              	.L2:
  48              	.LBE5:
  49              	.LBE4:
 188:Src/main.c    ****   while (1)
  50              		.loc 1 188 3 discriminator 1 view .LVU4
 189:Src/main.c    ****   {
 190:Src/main.c    ****   }
  51              		.loc 1 190 3 discriminator 1 view .LVU5
 188:Src/main.c    ****   while (1)
  52              		.loc 1 188 9 discriminator 1 view .LVU6
  53 0002 FEE7     		b	.L2
  54              		.cfi_endproc
  55              	.LFE352:
  57              		.section	.text.SystemClock_Config,"ax",%progbits
  58              		.align	1
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 9


  59              		.global	SystemClock_Config
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	SystemClock_Config:
  65              	.LFB351:
 121:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 121 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 112
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 00B5     		push	{lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 9DB0     		sub	sp, sp, #116
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 120
 122:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 122 3 view .LVU8
 122:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 122 22 is_stmt 0 view .LVU9
  79 0004 4C22     		movs	r2, #76
  80 0006 0021     		movs	r1, #0
  81 0008 09A8     		add	r0, sp, #36
  82 000a FFF7FEFF 		bl	memset
  83              	.LVL0:
 123:Src/main.c    **** 
  84              		.loc 1 123 3 is_stmt 1 view .LVU10
 123:Src/main.c    **** 
  85              		.loc 1 123 22 is_stmt 0 view .LVU11
  86 000e 2022     		movs	r2, #32
  87 0010 0021     		movs	r1, #0
  88 0012 01A8     		add	r0, sp, #4
  89 0014 FFF7FEFF 		bl	memset
  90              	.LVL1:
 127:Src/main.c    **** 
  91              		.loc 1 127 3 is_stmt 1 view .LVU12
  92 0018 0220     		movs	r0, #2
  93 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
  94              	.LVL2:
 131:Src/main.c    **** 
  95              		.loc 1 131 3 view .LVU13
  96              	.LBB6:
 131:Src/main.c    **** 
  97              		.loc 1 131 3 view .LVU14
  98 001e 0023     		movs	r3, #0
  99 0020 0093     		str	r3, [sp]
 131:Src/main.c    **** 
 100              		.loc 1 131 3 view .LVU15
 101 0022 214B     		ldr	r3, .L10
 102 0024 9A69     		ldr	r2, [r3, #24]
 103 0026 22F44042 		bic	r2, r2, #49152
 104 002a 9A61     		str	r2, [r3, #24]
 131:Src/main.c    **** 
 105              		.loc 1 131 3 view .LVU16
 106 002c 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 10


 107 002e 03F44043 		and	r3, r3, #49152
 108 0032 0093     		str	r3, [sp]
 131:Src/main.c    **** 
 109              		.loc 1 131 3 view .LVU17
 110 0034 009B     		ldr	r3, [sp]
 111              	.LBE6:
 131:Src/main.c    **** 
 112              		.loc 1 131 3 view .LVU18
 133:Src/main.c    **** 
 113              		.loc 1 133 3 view .LVU19
 114              	.L4:
 133:Src/main.c    **** 
 115              		.loc 1 133 48 discriminator 1 view .LVU20
 133:Src/main.c    **** 
 116              		.loc 1 133 8 discriminator 1 view .LVU21
 133:Src/main.c    **** 
 117              		.loc 1 133 10 is_stmt 0 discriminator 1 view .LVU22
 118 0036 1C4B     		ldr	r3, .L10
 119 0038 9B69     		ldr	r3, [r3, #24]
 133:Src/main.c    **** 
 120              		.loc 1 133 8 discriminator 1 view .LVU23
 121 003a 13F4005F 		tst	r3, #8192
 122 003e FAD0     		beq	.L4
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 123              		.loc 1 138 3 is_stmt 1 view .LVU24
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 124              		.loc 1 138 36 is_stmt 0 view .LVU25
 125 0040 0223     		movs	r3, #2
 126 0042 0993     		str	r3, [sp, #36]
 139:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 127              		.loc 1 139 3 is_stmt 1 view .LVU26
 139:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 128              		.loc 1 139 30 is_stmt 0 view .LVU27
 129 0044 0121     		movs	r1, #1
 130 0046 0C91     		str	r1, [sp, #48]
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131              		.loc 1 140 3 is_stmt 1 view .LVU28
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132              		.loc 1 140 41 is_stmt 0 view .LVU29
 133 0048 4022     		movs	r2, #64
 134 004a 0D92     		str	r2, [sp, #52]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 135              		.loc 1 141 3 is_stmt 1 view .LVU30
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 136              		.loc 1 141 34 is_stmt 0 view .LVU31
 137 004c 1293     		str	r3, [sp, #72]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 138              		.loc 1 142 3 is_stmt 1 view .LVU32
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 139              		.loc 1 142 35 is_stmt 0 view .LVU33
 140 004e 0022     		movs	r2, #0
 141 0050 1392     		str	r2, [sp, #76]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 34;
 142              		.loc 1 143 3 is_stmt 1 view .LVU34
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 34;
 143              		.loc 1 143 30 is_stmt 0 view .LVU35
 144 0052 0420     		movs	r0, #4
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 11


 145 0054 1490     		str	r0, [sp, #80]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 1;
 146              		.loc 1 144 3 is_stmt 1 view .LVU36
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 1;
 147              		.loc 1 144 30 is_stmt 0 view .LVU37
 148 0056 2220     		movs	r0, #34
 149 0058 1590     		str	r0, [sp, #84]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 150              		.loc 1 145 3 is_stmt 1 view .LVU38
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 151              		.loc 1 145 30 is_stmt 0 view .LVU39
 152 005a 1691     		str	r1, [sp, #88]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 153              		.loc 1 146 3 is_stmt 1 view .LVU40
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 154              		.loc 1 146 30 is_stmt 0 view .LVU41
 155 005c 1793     		str	r3, [sp, #92]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 156              		.loc 1 147 3 is_stmt 1 view .LVU42
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 157              		.loc 1 147 30 is_stmt 0 view .LVU43
 158 005e 1893     		str	r3, [sp, #96]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 159              		.loc 1 148 3 is_stmt 1 view .LVU44
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 160              		.loc 1 148 32 is_stmt 0 view .LVU45
 161 0060 0C23     		movs	r3, #12
 162 0062 1993     		str	r3, [sp, #100]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 163              		.loc 1 149 3 is_stmt 1 view .LVU46
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 164              		.loc 1 149 35 is_stmt 0 view .LVU47
 165 0064 1A92     		str	r2, [sp, #104]
 150:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166              		.loc 1 150 3 is_stmt 1 view .LVU48
 150:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 167              		.loc 1 150 34 is_stmt 0 view .LVU49
 168 0066 4FF44063 		mov	r3, #3072
 169 006a 1B93     		str	r3, [sp, #108]
 151:Src/main.c    ****   {
 170              		.loc 1 151 3 is_stmt 1 view .LVU50
 151:Src/main.c    ****   {
 171              		.loc 1 151 7 is_stmt 0 view .LVU51
 172 006c 09A8     		add	r0, sp, #36
 173 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 174              	.LVL3:
 151:Src/main.c    ****   {
 175              		.loc 1 151 6 view .LVU52
 176 0072 A8B9     		cbnz	r0, .L8
 158:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 177              		.loc 1 158 3 is_stmt 1 view .LVU53
 158:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 178              		.loc 1 158 31 is_stmt 0 view .LVU54
 179 0074 3F23     		movs	r3, #63
 180 0076 0193     		str	r3, [sp, #4]
 161:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 181              		.loc 1 161 3 is_stmt 1 view .LVU55
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 12


 161:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 182              		.loc 1 161 34 is_stmt 0 view .LVU56
 183 0078 0321     		movs	r1, #3
 184 007a 0291     		str	r1, [sp, #8]
 162:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 185              		.loc 1 162 3 is_stmt 1 view .LVU57
 162:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 186              		.loc 1 162 35 is_stmt 0 view .LVU58
 187 007c 0023     		movs	r3, #0
 188 007e 0393     		str	r3, [sp, #12]
 163:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 189              		.loc 1 163 3 is_stmt 1 view .LVU59
 163:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 190              		.loc 1 163 35 is_stmt 0 view .LVU60
 191 0080 0823     		movs	r3, #8
 192 0082 0493     		str	r3, [sp, #16]
 164:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 193              		.loc 1 164 3 is_stmt 1 view .LVU61
 164:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 194              		.loc 1 164 36 is_stmt 0 view .LVU62
 195 0084 4023     		movs	r3, #64
 196 0086 0593     		str	r3, [sp, #20]
 165:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 197              		.loc 1 165 3 is_stmt 1 view .LVU63
 165:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 198              		.loc 1 165 36 is_stmt 0 view .LVU64
 199 0088 0693     		str	r3, [sp, #24]
 166:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 200              		.loc 1 166 3 is_stmt 1 view .LVU65
 166:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 201              		.loc 1 166 36 is_stmt 0 view .LVU66
 202 008a 4FF48062 		mov	r2, #1024
 203 008e 0792     		str	r2, [sp, #28]
 167:Src/main.c    **** 
 204              		.loc 1 167 3 is_stmt 1 view .LVU67
 167:Src/main.c    **** 
 205              		.loc 1 167 36 is_stmt 0 view .LVU68
 206 0090 0893     		str	r3, [sp, #32]
 169:Src/main.c    ****   {
 207              		.loc 1 169 3 is_stmt 1 view .LVU69
 169:Src/main.c    ****   {
 208              		.loc 1 169 7 is_stmt 0 view .LVU70
 209 0092 01A8     		add	r0, sp, #4
 210 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 211              	.LVL4:
 169:Src/main.c    ****   {
 212              		.loc 1 169 6 view .LVU71
 213 0098 20B9     		cbnz	r0, .L9
 173:Src/main.c    **** 
 214              		.loc 1 173 1 view .LVU72
 215 009a 1DB0     		add	sp, sp, #116
 216              	.LCFI2:
 217              		.cfi_remember_state
 218              		.cfi_def_cfa_offset 4
 219              		@ sp needed
 220 009c 5DF804FB 		ldr	pc, [sp], #4
 221              	.L8:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 13


 222              	.LCFI3:
 223              		.cfi_restore_state
 153:Src/main.c    ****   }
 224              		.loc 1 153 5 is_stmt 1 view .LVU73
 225 00a0 FFF7FEFF 		bl	Error_Handler
 226              	.LVL5:
 227              	.L9:
 171:Src/main.c    ****   }
 228              		.loc 1 171 5 view .LVU74
 229 00a4 FFF7FEFF 		bl	Error_Handler
 230              	.LVL6:
 231              	.L11:
 232              		.align	2
 233              	.L10:
 234 00a8 00480258 		.word	1476544512
 235              		.cfi_endproc
 236              	.LFE351:
 238              		.section	.text.main,"ax",%progbits
 239              		.align	1
 240              		.global	main
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 245              	main:
 246              	.LFB350:
  67:Src/main.c    ****   /* USER CODE BEGIN 1 */
 247              		.loc 1 67 1 view -0
 248              		.cfi_startproc
 249              		@ Volatile: function does not return.
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252 0000 08B5     		push	{r3, lr}
 253              	.LCFI4:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
 256              		.cfi_offset 14, -4
  75:Src/main.c    **** 
 257              		.loc 1 75 3 view .LVU76
 258 0002 FFF7FEFF 		bl	HAL_Init
 259              	.LVL7:
  82:Src/main.c    **** 
 260              		.loc 1 82 3 view .LVU77
 261 0006 FFF7FEFF 		bl	SystemClock_Config
 262              	.LVL8:
  89:Src/main.c    ****   MX_ADC3_Init();
 263              		.loc 1 89 3 view .LVU78
 264 000a FFF7FEFF 		bl	MX_GPIO_Init
 265              	.LVL9:
  90:Src/main.c    ****   MX_TIM8_Init();
 266              		.loc 1 90 3 view .LVU79
 267 000e FFF7FEFF 		bl	MX_ADC3_Init
 268              	.LVL10:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 269              		.loc 1 91 3 view .LVU80
 270 0012 FFF7FEFF 		bl	MX_TIM8_Init
 271              	.LVL11:
  93:Src/main.c    ****   HAL_GPIO_WritePin(EBAKE_PWM_EN_GPIO_Port,EBAKE_PWM_EN_Pin,GPIO_PIN_SET);
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 14


 272              		.loc 1 93 3 view .LVU81
 273 0016 40F2FF72 		movw	r2, #2047
 274 001a 0021     		movs	r1, #0
 275 001c 0A48     		ldr	r0, .L15
 276 001e FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 277              	.LVL12:
  94:Src/main.c    **** 
 278              		.loc 1 94 3 view .LVU82
 279 0022 0122     		movs	r2, #1
 280 0024 8021     		movs	r1, #128
 281 0026 0948     		ldr	r0, .L15+4
 282 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 283              	.LVL13:
 284              	.L13:
 100:Src/main.c    ****   {
 285              		.loc 1 100 3 discriminator 1 view .LVU83
 102:Src/main.c    **** 
 286              		.loc 1 102 4 discriminator 1 view .LVU84
 287 002c 0821     		movs	r1, #8
 288 002e 0748     		ldr	r0, .L15+4
 289 0030 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 290              	.LVL14:
 104:Src/main.c    ****     HAL_Delay(100);
 291              		.loc 1 104 5 discriminator 1 view .LVU85
 292 0034 0821     		movs	r1, #8
 293 0036 0648     		ldr	r0, .L15+8
 294 0038 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 295              	.LVL15:
 105:Src/main.c    **** 
 296              		.loc 1 105 5 discriminator 1 view .LVU86
 297 003c 6420     		movs	r0, #100
 298 003e FFF7FEFF 		bl	HAL_Delay
 299              	.LVL16:
 107:Src/main.c    ****     
 300              		.loc 1 107 5 discriminator 1 view .LVU87
 301 0042 FFF7FEFF 		bl	adc_pollvale
 302              	.LVL17:
 100:Src/main.c    ****   {
 303              		.loc 1 100 9 discriminator 1 view .LVU88
 304 0046 F1E7     		b	.L13
 305              	.L16:
 306              		.align	2
 307              	.L15:
 308 0048 00000000 		.word	hadc3
 309 004c 00100258 		.word	1476530176
 310 0050 00040258 		.word	1476527104
 311              		.cfi_endproc
 312              	.LFE350:
 314              		.text
 315              	.Letext0:
 316              		.file 3 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 317              		.file 4 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 318              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 319              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 320              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 321              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 322              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 15


 323              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 324              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 325              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 326              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 327              		.file 14 "Inc/gpio.h"
 328              		.file 15 "Inc/adc.h"
 329              		.file 16 "Inc/tim.h"
 330              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 331              		.file 18 "<built-in>"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:19     .text.Error_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:25     .text.Error_Handler:00000000 Error_Handler
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:58     .text.SystemClock_Config:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:64     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:234    .text.SystemClock_Config:000000a8 $d
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:239    .text.main:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:245    .text.main:00000000 main
C:\Users\zhangge\AppData\Local\Temp\ccOKFNxF.s:308    .text.main:00000048 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC3_Init
MX_TIM8_Init
HAL_ADCEx_Calibration_Start
HAL_GPIO_WritePin
HAL_GPIO_TogglePin
HAL_Delay
adc_pollvale
hadc3

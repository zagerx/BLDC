ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.sysrunning_process,"ax",%progbits
  19              		.align	1
  20              		.global	sysrunning_process
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	sysrunning_process:
  26              	.LFB355:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "adc.h"
  22:Src/main.c    **** #include "i2c.h"
  23:Src/main.c    **** #include "tim.h"
  24:Src/main.c    **** #include "gpio.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include "motorctrl.h"
  29:Src/main.c    **** #include "hardware.h"
  30:Src/main.c    **** #include "perf_counter.h"
  31:Src/main.c    **** /* USER CODE END Includes */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** void PeriphCommonClock_Config(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** #define SYSRUNNING_PERCI            (1)
  63:Src/main.c    **** #define DELAY_1MS                   (1)/SYSRUNNING_PERCI
  64:Src/main.c    **** #define DELAY_2MS                   (2)/SYSRUNNING_PERCI
  65:Src/main.c    **** #define DELAY_5MS                   (5)/SYSRUNNING_PERCI
  66:Src/main.c    **** #define DELAY_20MS                  (20)/SYSRUNNING_PERCI
  67:Src/main.c    **** #define DELAY_500MS                 (500)/SYSRUNNING_PERCI
  68:Src/main.c    **** #define DELAY_1000MS                (1000)/SYSRUNNING_PERCI
  69:Src/main.c    **** #define DELAY_5000MS                (5000)/SYSRUNNING_PERCI
  70:Src/main.c    **** typedef struct
  71:Src/main.c    **** {
  72:Src/main.c    ****     /* data */
  73:Src/main.c    ****     unsigned int time_cnt;
  74:Src/main.c    ****     unsigned char state;
  75:Src/main.c    **** }sys_run_t;
  76:Src/main.c    **** static sys_run_t sg_SYSRuning;
  77:Src/main.c    **** void sysrunning_process(void)
  78:Src/main.c    **** {
  28              		.loc 1 78 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  79:Src/main.c    ****     enum{
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 3


  37              		.loc 1 79 5 view .LVU1
  80:Src/main.c    ****         SYS_IDLE,
  81:Src/main.c    ****         SYS_NORMLE,
  82:Src/main.c    ****     };
  83:Src/main.c    ****     /*-----------------------*/
  84:Src/main.c    ****     sg_SYSRuning.time_cnt++;
  38              		.loc 1 84 5 view .LVU2
  39              		.loc 1 84 17 is_stmt 0 view .LVU3
  40 0002 124A     		ldr	r2, .L6
  41 0004 1368     		ldr	r3, [r2]
  42              		.loc 1 84 26 view .LVU4
  43 0006 0133     		adds	r3, r3, #1
  44 0008 1360     		str	r3, [r2]
  85:Src/main.c    ****     switch (sg_SYSRuning.state)
  45              		.loc 1 85 5 is_stmt 1 view .LVU5
  46              		.loc 1 85 25 is_stmt 0 view .LVU6
  47 000a 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
  48              		.loc 1 85 5 view .LVU7
  49 000c 52B9     		cbnz	r2, .L1
  86:Src/main.c    ****     {
  87:Src/main.c    ****         case SYS_IDLE:
  88:Src/main.c    ****             if(!(sg_SYSRuning.time_cnt % (DELAY_5000MS))){
  50              		.loc 1 88 13 is_stmt 1 view .LVU8
  51              		.loc 1 88 40 is_stmt 0 view .LVU9
  52 000e 104A     		ldr	r2, .L6+4
  53 0010 A2FB0312 		umull	r1, r2, r2, r3
  54 0014 120B     		lsrs	r2, r2, #12
  55 0016 41F28831 		movw	r1, #5000
  56 001a 01FB1232 		mls	r2, r1, r2, r3
  57              		.loc 1 88 15 view .LVU10
  58 001e 12B9     		cbnz	r2, .L3
  89:Src/main.c    ****                 sg_SYSRuning.time_cnt = 0;
  59              		.loc 1 89 17 is_stmt 1 view .LVU11
  60              		.loc 1 89 39 is_stmt 0 view .LVU12
  61 0020 0A4B     		ldr	r3, .L6
  62 0022 1A60     		str	r2, [r3]
  90:Src/main.c    ****                 break;
  63              		.loc 1 90 17 is_stmt 1 view .LVU13
  64              	.L1:
  91:Src/main.c    ****             }           
  92:Src/main.c    ****             if(!(sg_SYSRuning.time_cnt % (DELAY_1000MS))){
  93:Src/main.c    ****             }
  94:Src/main.c    ****             if(!(sg_SYSRuning.time_cnt % (DELAY_500MS)))
  95:Src/main.c    ****             {
  96:Src/main.c    ****             }            
  97:Src/main.c    ****             if(!(sg_SYSRuning.time_cnt % (DELAY_20MS)))
  98:Src/main.c    ****             {
  99:Src/main.c    ****                 HAL_GPIO_TogglePin(WATCHDOG_IN_GPIO_Port,WATCHDOG_IN_Pin);
 100:Src/main.c    ****                 HAL_GPIO_TogglePin(LED_01_GPIO_Port,LED_01_Pin);
 101:Src/main.c    ****             }
 102:Src/main.c    ****             if(!(sg_SYSRuning.time_cnt % (DELAY_2MS))){
 103:Src/main.c    ****             }
 104:Src/main.c    ****         default:
 105:Src/main.c    ****             break;
 106:Src/main.c    ****     }
 107:Src/main.c    **** }
  65              		.loc 1 107 1 is_stmt 0 view .LVU14
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 4


  66 0024 08BD     		pop	{r3, pc}
  67              	.L3:
  92:Src/main.c    ****             }
  68              		.loc 1 92 13 is_stmt 1 view .LVU15
  93:Src/main.c    ****             if(!(sg_SYSRuning.time_cnt % (DELAY_500MS)))
  69              		.loc 1 93 13 view .LVU16
  94:Src/main.c    ****             {
  70              		.loc 1 94 13 view .LVU17
  96:Src/main.c    ****             if(!(sg_SYSRuning.time_cnt % (DELAY_20MS)))
  71              		.loc 1 96 13 view .LVU18
  97:Src/main.c    ****             {
  72              		.loc 1 97 13 view .LVU19
  97:Src/main.c    ****             {
  73              		.loc 1 97 40 is_stmt 0 view .LVU20
  74 0026 0B4A     		ldr	r2, .L6+8
  75 0028 A2FB0312 		umull	r1, r2, r2, r3
  76 002c 1209     		lsrs	r2, r2, #4
  77 002e 02EB8202 		add	r2, r2, r2, lsl #2
  78 0032 9100     		lsls	r1, r2, #2
  97:Src/main.c    ****             {
  79              		.loc 1 97 15 view .LVU21
  80 0034 8B42     		cmp	r3, r1
  81 0036 F5D1     		bne	.L1
  99:Src/main.c    ****                 HAL_GPIO_TogglePin(LED_01_GPIO_Port,LED_01_Pin);
  82              		.loc 1 99 17 is_stmt 1 view .LVU22
  83 0038 0821     		movs	r1, #8
  84 003a 0748     		ldr	r0, .L6+12
  85 003c FFF7FEFF 		bl	HAL_GPIO_TogglePin
  86              	.LVL0:
 100:Src/main.c    ****             }
  87              		.loc 1 100 17 view .LVU23
  88 0040 0821     		movs	r1, #8
  89 0042 0648     		ldr	r0, .L6+16
  90 0044 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  91              	.LVL1:
 102:Src/main.c    ****             }
  92              		.loc 1 102 13 view .LVU24
  93              		.loc 1 107 1 is_stmt 0 view .LVU25
  94 0048 ECE7     		b	.L1
  95              	.L7:
  96 004a 00BF     		.align	2
  97              	.L6:
  98 004c 00000000 		.word	.LANCHOR0
  99 0050 5917B7D1 		.word	-776530087
 100 0054 CDCCCCCC 		.word	-858993459
 101 0058 00040258 		.word	1476527104
 102 005c 00100258 		.word	1476530176
 103              		.cfi_endproc
 104              	.LFE355:
 106              		.section	.text.Error_Handler,"ax",%progbits
 107              		.align	1
 108              		.global	Error_Handler
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	Error_Handler:
 114              	.LFB359:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 5


 108:Src/main.c    **** #define DOWN_BUFFER_NAME "DownBuffer"  
 109:Src/main.c    **** #define DOWN_BUFFER_SIZE 1024  
 110:Src/main.c    **** unsigned char downBuffer[DOWN_BUFFER_SIZE]; 
 111:Src/main.c    **** float RTT_test_Id = 0.0f;
 112:Src/main.c    **** 
 113:Src/main.c    **** /* USER CODE END 0 */
 114:Src/main.c    **** 
 115:Src/main.c    **** /**
 116:Src/main.c    ****   * @brief  The application entry point.
 117:Src/main.c    ****   * @retval int
 118:Src/main.c    ****   */
 119:Src/main.c    **** int main(void)
 120:Src/main.c    **** {
 121:Src/main.c    ****   /* USER CODE BEGIN 1 */
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* USER CODE END 1 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 128:Src/main.c    ****   HAL_Init();
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE BEGIN Init */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE END Init */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* Configure the system clock */
 135:Src/main.c    ****   SystemClock_Config();
 136:Src/main.c    **** 
 137:Src/main.c    **** /* Configure the peripherals common clocks */
 138:Src/main.c    ****   PeriphCommonClock_Config();
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 141:Src/main.c    ****   init_cycle_counter(true);
 142:Src/main.c    ****   /* USER CODE END SysInit */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* Initialize all configured peripherals */
 145:Src/main.c    ****   MX_GPIO_Init();
 146:Src/main.c    ****   MX_TIM8_Init();
 147:Src/main.c    ****   MX_ADC2_Init();
 148:Src/main.c    ****   MX_ADC3_Init();
 149:Src/main.c    ****   MX_I2C2_Init();
 150:Src/main.c    ****   MX_ADC1_Init();
 151:Src/main.c    ****   MX_TIM4_Init();
 152:Src/main.c    ****   /* USER CODE BEGIN 2 */
 153:Src/main.c    ****   USER_DEBUG_NORMAL("H7 hello word\r\n");
 154:Src/main.c    ****   unsigned int nCycleUsed = 0;
 155:Src/main.c    ****   __cycleof__("full test",{nCycleUsed = _;}){
 156:Src/main.c    ****     delay_ms(1000);
 157:Src/main.c    ****   }
 158:Src/main.c    ****   USER_DEBUG_NORMAL("full test runing time %d\r\n",nCycleUsed/550);
 159:Src/main.c    ****   hw_init();
 160:Src/main.c    **** 
 161:Src/main.c    ****   SEGGER_RTT_ConfigDownBuffer(0, DOWN_BUFFER_NAME, (void*)downBuffer, DOWN_BUFFER_SIZE, SEGGER_RTT_
 162:Src/main.c    ****   /* USER CODE END 2 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* Infinite loop */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 6


 165:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 166:Src/main.c    ****   while (1)
 167:Src/main.c    ****   {
 168:Src/main.c    ****     if (SEGGER_RTT_HasKey())  
 169:Src/main.c    ****     {  
 170:Src/main.c    ****         char rxBuffer[32];  
 171:Src/main.c    ****         int bytesRead = SEGGER_RTT_Read(0, rxBuffer, sizeof(rxBuffer) - 1);  
 172:Src/main.c    ****         if (bytesRead > 0)  
 173:Src/main.c    ****         {  
 174:Src/main.c    ****           rxBuffer[bytesRead] = '\0'; // 添加字符串结束符
 175:Src/main.c    ****           RTT_test_Id = atof(rxBuffer);
 176:Src/main.c    ****         }
 177:Src/main.c    ****     }
 178:Src/main.c    ****     sensor_process();
 179:Src/main.c    ****     sysrunning_process();
 180:Src/main.c    ****     motortctrl_process();
 181:Src/main.c    ****     HAL_Delay(1);
 182:Src/main.c    **** 
 183:Src/main.c    ****     /* USER CODE END WHILE */
 184:Src/main.c    **** 
 185:Src/main.c    ****     /* USER CODE BEGIN 3 */
 186:Src/main.c    ****   }
 187:Src/main.c    ****   /* USER CODE END 3 */
 188:Src/main.c    **** }
 189:Src/main.c    **** 
 190:Src/main.c    **** /**
 191:Src/main.c    ****   * @brief System Clock Configuration
 192:Src/main.c    ****   * @retval None
 193:Src/main.c    ****   */
 194:Src/main.c    **** void SystemClock_Config(void)
 195:Src/main.c    **** {
 196:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 197:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 198:Src/main.c    **** 
 199:Src/main.c    ****   /** Supply configuration update enable
 200:Src/main.c    ****   */
 201:Src/main.c    ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 202:Src/main.c    **** 
 203:Src/main.c    ****   /** Configure the main internal regulator output voltage
 204:Src/main.c    ****   */
 205:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 206:Src/main.c    **** 
 207:Src/main.c    ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 208:Src/main.c    **** 
 209:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 210:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 211:Src/main.c    ****   */
 212:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 213:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 214:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 34;
 219:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 1;
 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 7


 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 224:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 225:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 226:Src/main.c    ****   {
 227:Src/main.c    ****     Error_Handler();
 228:Src/main.c    ****   }
 229:Src/main.c    **** 
 230:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 231:Src/main.c    ****   */
 232:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 233:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 234:Src/main.c    ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 235:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 236:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 237:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 238:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 239:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 240:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 241:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 242:Src/main.c    **** 
 243:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 244:Src/main.c    ****   {
 245:Src/main.c    ****     Error_Handler();
 246:Src/main.c    ****   }
 247:Src/main.c    **** }
 248:Src/main.c    **** 
 249:Src/main.c    **** /**
 250:Src/main.c    ****   * @brief Peripherals Common Clock Configuration
 251:Src/main.c    ****   * @retval None
 252:Src/main.c    ****   */
 253:Src/main.c    **** void PeriphCommonClock_Config(void)
 254:Src/main.c    **** {
 255:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 256:Src/main.c    **** 
 257:Src/main.c    ****   /** Initializes the peripherals clock
 258:Src/main.c    ****   */
 259:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 260:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2M = 4;
 261:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 262:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2P = 3;
 263:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 264:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 265:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 266:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 267:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 268:Src/main.c    ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 269:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 270:Src/main.c    ****   {
 271:Src/main.c    ****     Error_Handler();
 272:Src/main.c    ****   }
 273:Src/main.c    **** }
 274:Src/main.c    **** 
 275:Src/main.c    **** /* USER CODE BEGIN 4 */
 276:Src/main.c    **** 
 277:Src/main.c    **** /* USER CODE END 4 */
 278:Src/main.c    **** 
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 8


 279:Src/main.c    **** /**
 280:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 281:Src/main.c    ****   * @retval None
 282:Src/main.c    ****   */
 283:Src/main.c    **** void Error_Handler(void)
 284:Src/main.c    **** {
 115              		.loc 1 284 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ Volatile: function does not return.
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 285:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 286:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 287:Src/main.c    ****   __disable_irq();
 121              		.loc 1 287 3 view .LVU27
 122              	.LBB4:
 123              	.LBI4:
 124              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 9


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 10


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 11


 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 125              		.loc 2 207 27 view .LVU28
 126              	.LBB5:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 12


 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 127              		.loc 2 209 3 view .LVU29
 128              		.syntax unified
 129              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 130 0000 72B6     		cpsid i
 131              	@ 0 "" 2
 132              		.thumb
 133              		.syntax unified
 134              	.L9:
 135              	.LBE5:
 136              	.LBE4:
 288:Src/main.c    ****   while (1)
 137              		.loc 1 288 3 discriminator 1 view .LVU30
 289:Src/main.c    ****   {
 290:Src/main.c    ****   }
 138              		.loc 1 290 3 discriminator 1 view .LVU31
 288:Src/main.c    ****   while (1)
 139              		.loc 1 288 9 discriminator 1 view .LVU32
 140 0002 FEE7     		b	.L9
 141              		.cfi_endproc
 142              	.LFE359:
 144              		.section	.text.SystemClock_Config,"ax",%progbits
 145              		.align	1
 146              		.global	SystemClock_Config
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	SystemClock_Config:
 152              	.LFB357:
 195:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153              		.loc 1 195 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 112
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 00B5     		push	{lr}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
 161 0002 9DB0     		sub	sp, sp, #116
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 120
 196:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 164              		.loc 1 196 3 view .LVU34
 196:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 165              		.loc 1 196 22 is_stmt 0 view .LVU35
 166 0004 4C22     		movs	r2, #76
 167 0006 0021     		movs	r1, #0
 168 0008 09A8     		add	r0, sp, #36
 169 000a FFF7FEFF 		bl	memset
 170              	.LVL2:
 197:Src/main.c    **** 
 171              		.loc 1 197 3 is_stmt 1 view .LVU36
 197:Src/main.c    **** 
 172              		.loc 1 197 22 is_stmt 0 view .LVU37
 173 000e 2022     		movs	r2, #32
 174 0010 0021     		movs	r1, #0
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 13


 175 0012 01A8     		add	r0, sp, #4
 176 0014 FFF7FEFF 		bl	memset
 177              	.LVL3:
 201:Src/main.c    **** 
 178              		.loc 1 201 3 is_stmt 1 view .LVU38
 179 0018 0220     		movs	r0, #2
 180 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 181              	.LVL4:
 205:Src/main.c    **** 
 182              		.loc 1 205 3 view .LVU39
 183              	.LBB6:
 205:Src/main.c    **** 
 184              		.loc 1 205 3 view .LVU40
 185 001e 0023     		movs	r3, #0
 186 0020 0093     		str	r3, [sp]
 205:Src/main.c    **** 
 187              		.loc 1 205 3 view .LVU41
 188 0022 214B     		ldr	r3, .L17
 189 0024 9A69     		ldr	r2, [r3, #24]
 190 0026 22F44042 		bic	r2, r2, #49152
 191 002a 9A61     		str	r2, [r3, #24]
 205:Src/main.c    **** 
 192              		.loc 1 205 3 view .LVU42
 193 002c 9B69     		ldr	r3, [r3, #24]
 194 002e 03F44043 		and	r3, r3, #49152
 195 0032 0093     		str	r3, [sp]
 205:Src/main.c    **** 
 196              		.loc 1 205 3 view .LVU43
 197 0034 009B     		ldr	r3, [sp]
 198              	.LBE6:
 205:Src/main.c    **** 
 199              		.loc 1 205 3 view .LVU44
 207:Src/main.c    **** 
 200              		.loc 1 207 3 view .LVU45
 201              	.L11:
 207:Src/main.c    **** 
 202              		.loc 1 207 48 discriminator 1 view .LVU46
 207:Src/main.c    **** 
 203              		.loc 1 207 8 discriminator 1 view .LVU47
 207:Src/main.c    **** 
 204              		.loc 1 207 10 is_stmt 0 discriminator 1 view .LVU48
 205 0036 1C4B     		ldr	r3, .L17
 206 0038 9B69     		ldr	r3, [r3, #24]
 207:Src/main.c    **** 
 207              		.loc 1 207 8 discriminator 1 view .LVU49
 208 003a 13F4005F 		tst	r3, #8192
 209 003e FAD0     		beq	.L11
 212:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 210              		.loc 1 212 3 is_stmt 1 view .LVU50
 212:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 211              		.loc 1 212 36 is_stmt 0 view .LVU51
 212 0040 0223     		movs	r3, #2
 213 0042 0993     		str	r3, [sp, #36]
 213:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 214              		.loc 1 213 3 is_stmt 1 view .LVU52
 213:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 215              		.loc 1 213 30 is_stmt 0 view .LVU53
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 14


 216 0044 0121     		movs	r1, #1
 217 0046 0C91     		str	r1, [sp, #48]
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 218              		.loc 1 214 3 is_stmt 1 view .LVU54
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 219              		.loc 1 214 41 is_stmt 0 view .LVU55
 220 0048 4022     		movs	r2, #64
 221 004a 0D92     		str	r2, [sp, #52]
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 222              		.loc 1 215 3 is_stmt 1 view .LVU56
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 223              		.loc 1 215 34 is_stmt 0 view .LVU57
 224 004c 1293     		str	r3, [sp, #72]
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 225              		.loc 1 216 3 is_stmt 1 view .LVU58
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 226              		.loc 1 216 35 is_stmt 0 view .LVU59
 227 004e 0022     		movs	r2, #0
 228 0050 1392     		str	r2, [sp, #76]
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 34;
 229              		.loc 1 217 3 is_stmt 1 view .LVU60
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 34;
 230              		.loc 1 217 30 is_stmt 0 view .LVU61
 231 0052 0420     		movs	r0, #4
 232 0054 1490     		str	r0, [sp, #80]
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 1;
 233              		.loc 1 218 3 is_stmt 1 view .LVU62
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 1;
 234              		.loc 1 218 30 is_stmt 0 view .LVU63
 235 0056 2220     		movs	r0, #34
 236 0058 1590     		str	r0, [sp, #84]
 219:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 237              		.loc 1 219 3 is_stmt 1 view .LVU64
 219:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 238              		.loc 1 219 30 is_stmt 0 view .LVU65
 239 005a 1691     		str	r1, [sp, #88]
 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 240              		.loc 1 220 3 is_stmt 1 view .LVU66
 220:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 241              		.loc 1 220 30 is_stmt 0 view .LVU67
 242 005c 1793     		str	r3, [sp, #92]
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 243              		.loc 1 221 3 is_stmt 1 view .LVU68
 221:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 244              		.loc 1 221 30 is_stmt 0 view .LVU69
 245 005e 1893     		str	r3, [sp, #96]
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 246              		.loc 1 222 3 is_stmt 1 view .LVU70
 222:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 247              		.loc 1 222 32 is_stmt 0 view .LVU71
 248 0060 0C23     		movs	r3, #12
 249 0062 1993     		str	r3, [sp, #100]
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 250              		.loc 1 223 3 is_stmt 1 view .LVU72
 223:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 251              		.loc 1 223 35 is_stmt 0 view .LVU73
 252 0064 1A92     		str	r2, [sp, #104]
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 15


 224:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 253              		.loc 1 224 3 is_stmt 1 view .LVU74
 224:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 254              		.loc 1 224 34 is_stmt 0 view .LVU75
 255 0066 4FF44063 		mov	r3, #3072
 256 006a 1B93     		str	r3, [sp, #108]
 225:Src/main.c    ****   {
 257              		.loc 1 225 3 is_stmt 1 view .LVU76
 225:Src/main.c    ****   {
 258              		.loc 1 225 7 is_stmt 0 view .LVU77
 259 006c 09A8     		add	r0, sp, #36
 260 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 261              	.LVL5:
 225:Src/main.c    ****   {
 262              		.loc 1 225 6 view .LVU78
 263 0072 A8B9     		cbnz	r0, .L15
 232:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 264              		.loc 1 232 3 is_stmt 1 view .LVU79
 232:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 265              		.loc 1 232 31 is_stmt 0 view .LVU80
 266 0074 3F23     		movs	r3, #63
 267 0076 0193     		str	r3, [sp, #4]
 235:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 268              		.loc 1 235 3 is_stmt 1 view .LVU81
 235:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 269              		.loc 1 235 34 is_stmt 0 view .LVU82
 270 0078 0321     		movs	r1, #3
 271 007a 0291     		str	r1, [sp, #8]
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 272              		.loc 1 236 3 is_stmt 1 view .LVU83
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 273              		.loc 1 236 35 is_stmt 0 view .LVU84
 274 007c 0023     		movs	r3, #0
 275 007e 0393     		str	r3, [sp, #12]
 237:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 276              		.loc 1 237 3 is_stmt 1 view .LVU85
 237:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 277              		.loc 1 237 35 is_stmt 0 view .LVU86
 278 0080 0823     		movs	r3, #8
 279 0082 0493     		str	r3, [sp, #16]
 238:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 280              		.loc 1 238 3 is_stmt 1 view .LVU87
 238:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 281              		.loc 1 238 36 is_stmt 0 view .LVU88
 282 0084 4023     		movs	r3, #64
 283 0086 0593     		str	r3, [sp, #20]
 239:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 284              		.loc 1 239 3 is_stmt 1 view .LVU89
 239:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 285              		.loc 1 239 36 is_stmt 0 view .LVU90
 286 0088 0693     		str	r3, [sp, #24]
 240:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 287              		.loc 1 240 3 is_stmt 1 view .LVU91
 240:Src/main.c    ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 288              		.loc 1 240 36 is_stmt 0 view .LVU92
 289 008a 4FF48062 		mov	r2, #1024
 290 008e 0792     		str	r2, [sp, #28]
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 16


 241:Src/main.c    **** 
 291              		.loc 1 241 3 is_stmt 1 view .LVU93
 241:Src/main.c    **** 
 292              		.loc 1 241 36 is_stmt 0 view .LVU94
 293 0090 0893     		str	r3, [sp, #32]
 243:Src/main.c    ****   {
 294              		.loc 1 243 3 is_stmt 1 view .LVU95
 243:Src/main.c    ****   {
 295              		.loc 1 243 7 is_stmt 0 view .LVU96
 296 0092 01A8     		add	r0, sp, #4
 297 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 298              	.LVL6:
 243:Src/main.c    ****   {
 299              		.loc 1 243 6 view .LVU97
 300 0098 20B9     		cbnz	r0, .L16
 247:Src/main.c    **** 
 301              		.loc 1 247 1 view .LVU98
 302 009a 1DB0     		add	sp, sp, #116
 303              	.LCFI3:
 304              		.cfi_remember_state
 305              		.cfi_def_cfa_offset 4
 306              		@ sp needed
 307 009c 5DF804FB 		ldr	pc, [sp], #4
 308              	.L15:
 309              	.LCFI4:
 310              		.cfi_restore_state
 227:Src/main.c    ****   }
 311              		.loc 1 227 5 is_stmt 1 view .LVU99
 312 00a0 FFF7FEFF 		bl	Error_Handler
 313              	.LVL7:
 314              	.L16:
 245:Src/main.c    ****   }
 315              		.loc 1 245 5 view .LVU100
 316 00a4 FFF7FEFF 		bl	Error_Handler
 317              	.LVL8:
 318              	.L18:
 319              		.align	2
 320              	.L17:
 321 00a8 00480258 		.word	1476544512
 322              		.cfi_endproc
 323              	.LFE357:
 325              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 326              		.align	1
 327              		.global	PeriphCommonClock_Config
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	PeriphCommonClock_Config:
 333              	.LFB358:
 254:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 334              		.loc 1 254 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 184
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 00B5     		push	{lr}
 339              	.LCFI5:
 340              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 17


 341              		.cfi_offset 14, -4
 342 0002 AFB0     		sub	sp, sp, #188
 343              	.LCFI6:
 344              		.cfi_def_cfa_offset 192
 255:Src/main.c    **** 
 345              		.loc 1 255 3 view .LVU102
 255:Src/main.c    **** 
 346              		.loc 1 255 28 is_stmt 0 view .LVU103
 347 0004 B822     		movs	r2, #184
 348 0006 0021     		movs	r1, #0
 349 0008 6846     		mov	r0, sp
 350 000a FFF7FEFF 		bl	memset
 351              	.LVL9:
 259:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2M = 4;
 352              		.loc 1 259 3 is_stmt 1 view .LVU104
 259:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2M = 4;
 353              		.loc 1 259 44 is_stmt 0 view .LVU105
 354 000e 4FF40022 		mov	r2, #524288
 355 0012 0023     		movs	r3, #0
 356 0014 CDE90023 		strd	r2, [sp]
 260:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 357              		.loc 1 260 3 is_stmt 1 view .LVU106
 260:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 358              		.loc 1 260 34 is_stmt 0 view .LVU107
 359 0018 0423     		movs	r3, #4
 360 001a 0293     		str	r3, [sp, #8]
 261:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2P = 3;
 361              		.loc 1 261 3 is_stmt 1 view .LVU108
 261:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2P = 3;
 362              		.loc 1 261 34 is_stmt 0 view .LVU109
 363 001c 0C23     		movs	r3, #12
 364 001e 0393     		str	r3, [sp, #12]
 262:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 365              		.loc 1 262 3 is_stmt 1 view .LVU110
 262:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 366              		.loc 1 262 34 is_stmt 0 view .LVU111
 367 0020 0323     		movs	r3, #3
 368 0022 0493     		str	r3, [sp, #16]
 263:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 369              		.loc 1 263 3 is_stmt 1 view .LVU112
 263:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 370              		.loc 1 263 34 is_stmt 0 view .LVU113
 371 0024 0223     		movs	r3, #2
 372 0026 0593     		str	r3, [sp, #20]
 264:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 373              		.loc 1 264 3 is_stmt 1 view .LVU114
 264:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 374              		.loc 1 264 34 is_stmt 0 view .LVU115
 375 0028 0693     		str	r3, [sp, #24]
 265:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 376              		.loc 1 265 3 is_stmt 1 view .LVU116
 265:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 377              		.loc 1 265 36 is_stmt 0 view .LVU117
 378 002a C023     		movs	r3, #192
 379 002c 0793     		str	r3, [sp, #28]
 266:Src/main.c    ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 380              		.loc 1 266 3 is_stmt 1 view .LVU118
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 18


 267:Src/main.c    ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 381              		.loc 1 267 3 view .LVU119
 268:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 382              		.loc 1 268 3 view .LVU120
 269:Src/main.c    ****   {
 383              		.loc 1 269 3 view .LVU121
 269:Src/main.c    ****   {
 384              		.loc 1 269 7 is_stmt 0 view .LVU122
 385 002e 6846     		mov	r0, sp
 386 0030 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 387              	.LVL10:
 269:Src/main.c    ****   {
 388              		.loc 1 269 6 view .LVU123
 389 0034 10B9     		cbnz	r0, .L22
 273:Src/main.c    **** 
 390              		.loc 1 273 1 view .LVU124
 391 0036 2FB0     		add	sp, sp, #188
 392              	.LCFI7:
 393              		.cfi_remember_state
 394              		.cfi_def_cfa_offset 4
 395              		@ sp needed
 396 0038 5DF804FB 		ldr	pc, [sp], #4
 397              	.L22:
 398              	.LCFI8:
 399              		.cfi_restore_state
 271:Src/main.c    ****   }
 400              		.loc 1 271 5 is_stmt 1 view .LVU125
 401 003c FFF7FEFF 		bl	Error_Handler
 402              	.LVL11:
 403              		.cfi_endproc
 404              	.LFE358:
 406              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 407              		.align	2
 408              	.LC0:
 409 0000 48372068 		.ascii	"H7 hello word\015\012\000"
 409      656C6C6F 
 409      20776F72 
 409      640D0A00 
 410              		.align	2
 411              	.LC1:
 412 0010 66756C6C 		.ascii	"full test runing time %d\015\012\000"
 412      20746573 
 412      74207275 
 412      6E696E67 
 412      2074696D 
 413 002b 00       		.align	2
 414              	.LC2:
 415 002c 446F776E 		.ascii	"DownBuffer\000"
 415      42756666 
 415      657200
 416              		.section	.text.main,"ax",%progbits
 417              		.align	1
 418              		.global	main
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	main:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 19


 424              	.LFB356:
 120:Src/main.c    ****   /* USER CODE BEGIN 1 */
 425              		.loc 1 120 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 32
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 70B5     		push	{r4, r5, r6, lr}
 430              	.LCFI9:
 431              		.cfi_def_cfa_offset 16
 432              		.cfi_offset 4, -16
 433              		.cfi_offset 5, -12
 434              		.cfi_offset 6, -8
 435              		.cfi_offset 14, -4
 436 0002 8AB0     		sub	sp, sp, #40
 437              	.LCFI10:
 438              		.cfi_def_cfa_offset 56
 128:Src/main.c    **** 
 439              		.loc 1 128 3 view .LVU127
 440 0004 FFF7FEFF 		bl	HAL_Init
 441              	.LVL12:
 135:Src/main.c    **** 
 442              		.loc 1 135 3 view .LVU128
 443 0008 FFF7FEFF 		bl	SystemClock_Config
 444              	.LVL13:
 138:Src/main.c    **** 
 445              		.loc 1 138 3 view .LVU129
 446 000c FFF7FEFF 		bl	PeriphCommonClock_Config
 447              	.LVL14:
 141:Src/main.c    ****   /* USER CODE END SysInit */
 448              		.loc 1 141 3 view .LVU130
 449 0010 0120     		movs	r0, #1
 450 0012 FFF7FEFF 		bl	init_cycle_counter
 451              	.LVL15:
 145:Src/main.c    ****   MX_TIM8_Init();
 452              		.loc 1 145 3 view .LVU131
 453 0016 FFF7FEFF 		bl	MX_GPIO_Init
 454              	.LVL16:
 146:Src/main.c    ****   MX_ADC2_Init();
 455              		.loc 1 146 3 view .LVU132
 456 001a FFF7FEFF 		bl	MX_TIM8_Init
 457              	.LVL17:
 147:Src/main.c    ****   MX_ADC3_Init();
 458              		.loc 1 147 3 view .LVU133
 459 001e FFF7FEFF 		bl	MX_ADC2_Init
 460              	.LVL18:
 148:Src/main.c    ****   MX_I2C2_Init();
 461              		.loc 1 148 3 view .LVU134
 462 0022 FFF7FEFF 		bl	MX_ADC3_Init
 463              	.LVL19:
 149:Src/main.c    ****   MX_ADC1_Init();
 464              		.loc 1 149 3 view .LVU135
 465 0026 FFF7FEFF 		bl	MX_I2C2_Init
 466              	.LVL20:
 150:Src/main.c    ****   MX_TIM4_Init();
 467              		.loc 1 150 3 view .LVU136
 468 002a FFF7FEFF 		bl	MX_ADC1_Init
 469              	.LVL21:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 20


 151:Src/main.c    ****   /* USER CODE BEGIN 2 */
 470              		.loc 1 151 3 view .LVU137
 471 002e FFF7FEFF 		bl	MX_TIM4_Init
 472              	.LVL22:
 153:Src/main.c    ****   unsigned int nCycleUsed = 0;
 473              		.loc 1 153 3 view .LVU138
 474 0032 2B49     		ldr	r1, .L30
 475 0034 0020     		movs	r0, #0
 476 0036 FFF7FEFF 		bl	SEGGER_RTT_printf
 477              	.LVL23:
 154:Src/main.c    ****   __cycleof__("full test",{nCycleUsed = _;}){
 478              		.loc 1 154 3 view .LVU139
 155:Src/main.c    ****     delay_ms(1000);
 479              		.loc 1 155 3 view .LVU140
 480              	.LBB7:
 155:Src/main.c    ****     delay_ms(1000);
 481              		.loc 1 155 3 view .LVU141
 482 003a FFF7FEFF 		bl	get_system_ticks
 483              	.LVL24:
 484 003e 0546     		mov	r5, r0
 485 0040 0C46     		mov	r4, r1
 486              	.LVL25:
 155:Src/main.c    ****     delay_ms(1000);
 487              		.loc 1 155 3 is_stmt 0 view .LVU142
 488 0042 0023     		movs	r3, #0
 489              	.LBE7:
 154:Src/main.c    ****   __cycleof__("full test",{nCycleUsed = _;}){
 490              		.loc 1 154 16 view .LVU143
 491 0044 1A46     		mov	r2, r3
 492              	.LVL26:
 493              	.L25:
 494              	.LBB10:
 495              	.LBB8:
 155:Src/main.c    ****     delay_ms(1000);
 496              		.loc 1 155 3 is_stmt 1 discriminator 5 view .LVU144
 497              	.LBE8:
 155:Src/main.c    ****     delay_ms(1000);
 498              		.loc 1 155 3 discriminator 5 view .LVU145
 499 0046 03F10806 		add	r6, r3, #8
 500              	.LVL27:
 155:Src/main.c    ****     delay_ms(1000);
 501              		.loc 1 155 3 is_stmt 0 discriminator 5 view .LVU146
 502 004a 83B9     		cbnz	r3, .L24
 156:Src/main.c    ****   }
 503              		.loc 1 156 5 is_stmt 1 view .LVU147
 504 004c 4FF47A70 		mov	r0, #1000
 505 0050 FFF7FEFF 		bl	delay_ms
 506              	.LVL28:
 155:Src/main.c    ****     delay_ms(1000);
 507              		.loc 1 155 3 view .LVU148
 508              	.LBB9:
 155:Src/main.c    ****     delay_ms(1000);
 509              		.loc 1 155 3 view .LVU149
 510 0054 FFF7FEFF 		bl	get_system_ticks
 511              	.LVL29:
 512 0058 451B     		subs	r5, r0, r5
 513 005a 61EB0404 		sbc	r4, r1, r4
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 21


 514 005e 214B     		ldr	r3, .L30+4
 515 0060 1B68     		ldr	r3, [r3]
 516 0062 ED1A     		subs	r5, r5, r3
 517 0064 64EBE374 		sbc	r4, r4, r3, asr #31
 155:Src/main.c    ****     delay_ms(1000);
 518              		.loc 1 155 3 view .LVU150
 155:Src/main.c    ****     delay_ms(1000);
 519              		.loc 1 155 3 view .LVU151
 155:Src/main.c    ****     delay_ms(1000);
 520              		.loc 1 155 3 view .LVU152
 521 0068 2A46     		mov	r2, r5
 522              	.LVL30:
 155:Src/main.c    ****     delay_ms(1000);
 523              		.loc 1 155 3 is_stmt 0 view .LVU153
 524              	.LBE9:
 525 006a 3346     		mov	r3, r6
 526 006c EBE7     		b	.L25
 527              	.L24:
 155:Src/main.c    ****     delay_ms(1000);
 528              		.loc 1 155 3 view .LVU154
 529              	.LBE10:
 158:Src/main.c    ****   hw_init();
 530              		.loc 1 158 3 is_stmt 1 view .LVU155
 531 006e 5208     		lsrs	r2, r2, #1
 532              	.LVL31:
 158:Src/main.c    ****   hw_init();
 533              		.loc 1 158 3 is_stmt 0 view .LVU156
 534 0070 1D4B     		ldr	r3, .L30+8
 535 0072 A3FB0232 		umull	r3, r2, r3, r2
 536 0076 D209     		lsrs	r2, r2, #7
 537 0078 1C49     		ldr	r1, .L30+12
 538 007a 0020     		movs	r0, #0
 539 007c FFF7FEFF 		bl	SEGGER_RTT_printf
 540              	.LVL32:
 159:Src/main.c    **** 
 541              		.loc 1 159 3 is_stmt 1 view .LVU157
 542 0080 FFF7FEFF 		bl	hw_init
 543              	.LVL33:
 161:Src/main.c    ****   /* USER CODE END 2 */
 544              		.loc 1 161 3 view .LVU158
 545 0084 0020     		movs	r0, #0
 546 0086 0090     		str	r0, [sp]
 547 0088 4FF48063 		mov	r3, #1024
 548 008c 184A     		ldr	r2, .L30+16
 549 008e 1949     		ldr	r1, .L30+20
 550 0090 FFF7FEFF 		bl	SEGGER_RTT_ConfigDownBuffer
 551              	.LVL34:
 552 0094 08E0     		b	.L28
 553              	.L26:
 178:Src/main.c    ****     sysrunning_process();
 554              		.loc 1 178 5 view .LVU159
 555 0096 FFF7FEFF 		bl	sensor_process
 556              	.LVL35:
 179:Src/main.c    ****     motortctrl_process();
 557              		.loc 1 179 5 view .LVU160
 558 009a FFF7FEFF 		bl	sysrunning_process
 559              	.LVL36:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 22


 180:Src/main.c    ****     HAL_Delay(1);
 560              		.loc 1 180 5 view .LVU161
 561 009e FFF7FEFF 		bl	motortctrl_process
 562              	.LVL37:
 181:Src/main.c    **** 
 563              		.loc 1 181 5 view .LVU162
 564 00a2 0120     		movs	r0, #1
 565 00a4 FFF7FEFF 		bl	HAL_Delay
 566              	.LVL38:
 166:Src/main.c    ****   {
 567              		.loc 1 166 9 view .LVU163
 568              	.L28:
 166:Src/main.c    ****   {
 569              		.loc 1 166 3 view .LVU164
 168:Src/main.c    ****     {  
 570              		.loc 1 168 5 view .LVU165
 168:Src/main.c    ****     {  
 571              		.loc 1 168 9 is_stmt 0 view .LVU166
 572 00a8 FFF7FEFF 		bl	SEGGER_RTT_HasKey
 573              	.LVL39:
 168:Src/main.c    ****     {  
 574              		.loc 1 168 8 view .LVU167
 575 00ac 0028     		cmp	r0, #0
 576 00ae F2D0     		beq	.L26
 577              	.LBB11:
 170:Src/main.c    ****         int bytesRead = SEGGER_RTT_Read(0, rxBuffer, sizeof(rxBuffer) - 1);  
 578              		.loc 1 170 9 is_stmt 1 view .LVU168
 171:Src/main.c    ****         if (bytesRead > 0)  
 579              		.loc 1 171 9 view .LVU169
 171:Src/main.c    ****         if (bytesRead > 0)  
 580              		.loc 1 171 25 is_stmt 0 view .LVU170
 581 00b0 1F22     		movs	r2, #31
 582 00b2 02A9     		add	r1, sp, #8
 583 00b4 0020     		movs	r0, #0
 584 00b6 FFF7FEFF 		bl	SEGGER_RTT_Read
 585              	.LVL40:
 172:Src/main.c    ****         {  
 586              		.loc 1 172 9 is_stmt 1 view .LVU171
 172:Src/main.c    ****         {  
 587              		.loc 1 172 12 is_stmt 0 view .LVU172
 588 00ba 0028     		cmp	r0, #0
 172:Src/main.c    ****         {  
 589              		.loc 1 172 12 view .LVU173
 590 00bc EBDD     		ble	.L26
 174:Src/main.c    ****           RTT_test_Id = atof(rxBuffer);
 591              		.loc 1 174 11 is_stmt 1 view .LVU174
 174:Src/main.c    ****           RTT_test_Id = atof(rxBuffer);
 592              		.loc 1 174 31 is_stmt 0 view .LVU175
 593 00be 00F12803 		add	r3, r0, #40
 594 00c2 0DEB0300 		add	r0, sp, r3
 595              	.LVL41:
 174:Src/main.c    ****           RTT_test_Id = atof(rxBuffer);
 596              		.loc 1 174 31 view .LVU176
 597 00c6 0023     		movs	r3, #0
 598              	.LVL42:
 174:Src/main.c    ****           RTT_test_Id = atof(rxBuffer);
 599              		.loc 1 174 31 view .LVU177
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 23


 600 00c8 00F8203C 		strb	r3, [r0, #-32]
 175:Src/main.c    ****         }
 601              		.loc 1 175 11 is_stmt 1 view .LVU178
 175:Src/main.c    ****         }
 602              		.loc 1 175 25 is_stmt 0 view .LVU179
 603 00cc 02A8     		add	r0, sp, #8
 604 00ce FFF7FEFF 		bl	atof
 605              	.LVL43:
 606 00d2 B7EEC00B 		vcvt.f32.f64	s0, d0
 175:Src/main.c    ****         }
 607              		.loc 1 175 23 view .LVU180
 608 00d6 084B     		ldr	r3, .L30+24
 609 00d8 83ED000A 		vstr.32	s0, [r3]
 610 00dc DBE7     		b	.L26
 611              	.L31:
 612 00de 00BF     		.align	2
 613              	.L30:
 614 00e0 00000000 		.word	.LC0
 615 00e4 00000000 		.word	g_nOffset
 616 00e8 73072877 		.word	1999112051
 617 00ec 10000000 		.word	.LC1
 618 00f0 00000000 		.word	.LANCHOR1
 619 00f4 2C000000 		.word	.LC2
 620 00f8 00000000 		.word	.LANCHOR2
 621              	.LBE11:
 622              		.cfi_endproc
 623              	.LFE356:
 625              		.global	RTT_test_Id
 626              		.global	downBuffer
 627              		.section	.bss.RTT_test_Id,"aw",%nobits
 628              		.align	2
 629              		.set	.LANCHOR2,. + 0
 632              	RTT_test_Id:
 633 0000 00000000 		.space	4
 634              		.section	.bss.downBuffer,"aw",%nobits
 635              		.align	2
 636              		.set	.LANCHOR1,. + 0
 639              	downBuffer:
 640 0000 00000000 		.space	1024
 640      00000000 
 640      00000000 
 640      00000000 
 640      00000000 
 641              		.section	.bss.sg_SYSRuning,"aw",%nobits
 642              		.align	2
 643              		.set	.LANCHOR0,. + 0
 646              	sg_SYSRuning:
 647 0000 00000000 		.space	8
 647      00000000 
 648              		.text
 649              	.Letext0:
 650              		.file 3 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 651              		.file 4 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 652              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 653              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 654              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 655              		.file 8 "../Common/Perf_counter/perf_counter.h"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 24


 656              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 657              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 658              		.file 11 "../Common/debuglog/SEGGER_RTT_V792h/RTT/SEGGER_RTT.h"
 659              		.file 12 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\stdlib.h"
 660              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 661              		.file 14 "Inc/gpio.h"
 662              		.file 15 "Inc/tim.h"
 663              		.file 16 "Inc/adc.h"
 664              		.file 17 "Inc/i2c.h"
 665              		.file 18 "./Hardware/hardware.h"
 666              		.file 19 "../Sensor/sensor.h"
 667              		.file 20 "../BLDCMotor/motorctrl.h"
 668              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 669              		.file 22 "<built-in>"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:19     .text.sysrunning_process:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:25     .text.sysrunning_process:00000000 sysrunning_process
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:98     .text.sysrunning_process:0000004c $d
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:107    .text.Error_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:113    .text.Error_Handler:00000000 Error_Handler
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:145    .text.SystemClock_Config:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:151    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:321    .text.SystemClock_Config:000000a8 $d
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:326    .text.PeriphCommonClock_Config:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:332    .text.PeriphCommonClock_Config:00000000 PeriphCommonClock_Config
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:407    .rodata.main.str1.4:00000000 $d
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:417    .text.main:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:423    .text.main:00000000 main
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:614    .text.main:000000e0 $d
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:632    .bss.RTT_test_Id:00000000 RTT_test_Id
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:639    .bss.downBuffer:00000000 downBuffer
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:628    .bss.RTT_test_Id:00000000 $d
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:635    .bss.downBuffer:00000000 $d
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:642    .bss.sg_SYSRuning:00000000 $d
C:\Users\zhangge\AppData\Local\Temp\ccW07WdC.s:646    .bss.sg_SYSRuning:00000000 sg_SYSRuning

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
init_cycle_counter
MX_GPIO_Init
MX_TIM8_Init
MX_ADC2_Init
MX_ADC3_Init
MX_I2C2_Init
MX_ADC1_Init
MX_TIM4_Init
SEGGER_RTT_printf
get_system_ticks
delay_ms
hw_init
SEGGER_RTT_ConfigDownBuffer
sensor_process
motortctrl_process
HAL_Delay
SEGGER_RTT_HasKey
SEGGER_RTT_Read
atof
g_nOffset

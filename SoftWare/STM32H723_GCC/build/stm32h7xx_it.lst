ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB350:
  27              		.file 1 "Src/stm32h7xx_it.c"
   1:Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32h7xx_it.c **** /**
   3:Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Src/stm32h7xx_it.c ****   * @attention
   8:Src/stm32h7xx_it.c ****   *
   9:Src/stm32h7xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Src/stm32h7xx_it.c ****   *
  12:Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32h7xx_it.c ****   *
  16:Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Src/stm32h7xx_it.c ****   */
  18:Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Src/stm32h7xx_it.c **** 
  20:Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32h7xx_it.c **** #include "main.h"
  22:Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32h7xx_it.c **** 
  27:Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32h7xx_it.c **** 
  30:Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Src/stm32h7xx_it.c **** 
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 2


  32:Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32h7xx_it.c **** 
  35:Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Src/stm32h7xx_it.c **** 
  37:Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32h7xx_it.c **** 
  40:Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Src/stm32h7xx_it.c **** 
  42:Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32h7xx_it.c **** 
  45:Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Src/stm32h7xx_it.c **** 
  47:Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32h7xx_it.c **** 
  50:Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32h7xx_it.c **** 
  52:Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32h7xx_it.c **** 
  55:Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32h7xx_it.c **** 
  57:Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32h7xx_it.c **** extern ADC_HandleTypeDef hadc1;
  59:Src/stm32h7xx_it.c **** extern ADC_HandleTypeDef hadc2;
  60:Src/stm32h7xx_it.c **** extern I2C_HandleTypeDef hi2c2;
  61:Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32h7xx_it.c **** #include "_common.h"
  63:Src/stm32h7xx_it.c **** extern void user_i2cirq_cb(I2C_HandleTypeDef *hi2c);
  64:Src/stm32h7xx_it.c **** /* USER CODE END EV */
  65:Src/stm32h7xx_it.c **** 
  66:Src/stm32h7xx_it.c **** /******************************************************************************/
  67:Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  68:Src/stm32h7xx_it.c **** /******************************************************************************/
  69:Src/stm32h7xx_it.c **** /**
  70:Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32h7xx_it.c ****   */
  72:Src/stm32h7xx_it.c **** void NMI_Handler(void)
  73:Src/stm32h7xx_it.c **** {
  28              		.loc 1 73 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  74:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32h7xx_it.c **** 
  76:Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32h7xx_it.c ****   while (1)
  35              		.loc 1 78 3 discriminator 1 view .LVU1
  79:Src/stm32h7xx_it.c ****   {
  80:Src/stm32h7xx_it.c ****   }
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU2
  78:Src/stm32h7xx_it.c ****   {
  37              		.loc 1 78 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE350:
  42              		.section	.rodata.HardFault_Handler.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 48617264 		.ascii	"HardFault\015\012\000"
  45      4661756C 
  45      740D0A00 
  46              		.section	.text.HardFault_Handler,"ax",%progbits
  47              		.align	1
  48              		.global	HardFault_Handler
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	HardFault_Handler:
  54              	.LFB351:
  81:Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Src/stm32h7xx_it.c **** }
  83:Src/stm32h7xx_it.c **** 
  84:Src/stm32h7xx_it.c **** /**
  85:Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Src/stm32h7xx_it.c ****   */
  87:Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  88:Src/stm32h7xx_it.c **** {
  55              		.loc 1 88 1 view -0
  56              		.cfi_startproc
  57              		@ Volatile: function does not return.
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 08B5     		push	{r3, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 3, -8
  64              		.cfi_offset 14, -4
  89:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Src/stm32h7xx_it.c ****   USER_DEBUG_NORMAL("HardFault\r\n");
  65              		.loc 1 90 3 view .LVU5
  66 0002 0249     		ldr	r1, .L6
  67 0004 0020     		movs	r0, #0
  68 0006 FFF7FEFF 		bl	SEGGER_RTT_printf
  69              	.LVL0:
  70              	.L4:
  91:Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Src/stm32h7xx_it.c ****   while (1)
  71              		.loc 1 92 3 discriminator 1 view .LVU6
  93:Src/stm32h7xx_it.c ****   {
  94:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Src/stm32h7xx_it.c ****   }
  72              		.loc 1 96 3 discriminator 1 view .LVU7
  92:Src/stm32h7xx_it.c ****   {
  73              		.loc 1 92 9 discriminator 1 view .LVU8
  74 000a FEE7     		b	.L4
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 4


  75              	.L7:
  76              		.align	2
  77              	.L6:
  78 000c 00000000 		.word	.LC0
  79              		.cfi_endproc
  80              	.LFE351:
  82              		.section	.text.MemManage_Handler,"ax",%progbits
  83              		.align	1
  84              		.global	MemManage_Handler
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	MemManage_Handler:
  90              	.LFB352:
  97:Src/stm32h7xx_it.c **** }
  98:Src/stm32h7xx_it.c **** 
  99:Src/stm32h7xx_it.c **** /**
 100:Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 101:Src/stm32h7xx_it.c ****   */
 102:Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 103:Src/stm32h7xx_it.c **** {
  91              		.loc 1 103 1 view -0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.L9:
 104:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Src/stm32h7xx_it.c **** 
 106:Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Src/stm32h7xx_it.c ****   while (1)
  98              		.loc 1 107 3 discriminator 1 view .LVU10
 108:Src/stm32h7xx_it.c ****   {
 109:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Src/stm32h7xx_it.c ****   }
  99              		.loc 1 111 3 discriminator 1 view .LVU11
 107:Src/stm32h7xx_it.c ****   {
 100              		.loc 1 107 9 discriminator 1 view .LVU12
 101 0000 FEE7     		b	.L9
 102              		.cfi_endproc
 103              	.LFE352:
 105              		.section	.text.BusFault_Handler,"ax",%progbits
 106              		.align	1
 107              		.global	BusFault_Handler
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	BusFault_Handler:
 113              	.LFB353:
 112:Src/stm32h7xx_it.c **** }
 113:Src/stm32h7xx_it.c **** 
 114:Src/stm32h7xx_it.c **** /**
 115:Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 116:Src/stm32h7xx_it.c ****   */
 117:Src/stm32h7xx_it.c **** void BusFault_Handler(void)
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 5


 118:Src/stm32h7xx_it.c **** {
 114              		.loc 1 118 1 view -0
 115              		.cfi_startproc
 116              		@ Volatile: function does not return.
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.L11:
 119:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Src/stm32h7xx_it.c **** 
 121:Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Src/stm32h7xx_it.c ****   while (1)
 121              		.loc 1 122 3 discriminator 1 view .LVU14
 123:Src/stm32h7xx_it.c ****   {
 124:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 125:Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Src/stm32h7xx_it.c ****   }
 122              		.loc 1 126 3 discriminator 1 view .LVU15
 122:Src/stm32h7xx_it.c ****   {
 123              		.loc 1 122 9 discriminator 1 view .LVU16
 124 0000 FEE7     		b	.L11
 125              		.cfi_endproc
 126              	.LFE353:
 128              		.section	.text.UsageFault_Handler,"ax",%progbits
 129              		.align	1
 130              		.global	UsageFault_Handler
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	UsageFault_Handler:
 136              	.LFB354:
 127:Src/stm32h7xx_it.c **** }
 128:Src/stm32h7xx_it.c **** 
 129:Src/stm32h7xx_it.c **** /**
 130:Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Src/stm32h7xx_it.c ****   */
 132:Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 133:Src/stm32h7xx_it.c **** {
 137              		.loc 1 133 1 view -0
 138              		.cfi_startproc
 139              		@ Volatile: function does not return.
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              	.L13:
 134:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Src/stm32h7xx_it.c **** 
 136:Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Src/stm32h7xx_it.c ****   while (1)
 144              		.loc 1 137 3 discriminator 1 view .LVU18
 138:Src/stm32h7xx_it.c ****   {
 139:Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Src/stm32h7xx_it.c ****   }
 145              		.loc 1 141 3 discriminator 1 view .LVU19
 137:Src/stm32h7xx_it.c ****   {
 146              		.loc 1 137 9 discriminator 1 view .LVU20
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 6


 147 0000 FEE7     		b	.L13
 148              		.cfi_endproc
 149              	.LFE354:
 151              		.section	.text.SVC_Handler,"ax",%progbits
 152              		.align	1
 153              		.global	SVC_Handler
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 158              	SVC_Handler:
 159              	.LFB355:
 142:Src/stm32h7xx_it.c **** }
 143:Src/stm32h7xx_it.c **** 
 144:Src/stm32h7xx_it.c **** /**
 145:Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 146:Src/stm32h7xx_it.c ****   */
 147:Src/stm32h7xx_it.c **** void SVC_Handler(void)
 148:Src/stm32h7xx_it.c **** {
 160              		.loc 1 148 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 149:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 150:Src/stm32h7xx_it.c **** 
 151:Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 152:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 153:Src/stm32h7xx_it.c **** 
 154:Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 155:Src/stm32h7xx_it.c **** }
 165              		.loc 1 155 1 view .LVU22
 166 0000 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE355:
 170              		.section	.text.DebugMon_Handler,"ax",%progbits
 171              		.align	1
 172              		.global	DebugMon_Handler
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	DebugMon_Handler:
 178              	.LFB356:
 156:Src/stm32h7xx_it.c **** 
 157:Src/stm32h7xx_it.c **** /**
 158:Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 159:Src/stm32h7xx_it.c ****   */
 160:Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 161:Src/stm32h7xx_it.c **** {
 179              		.loc 1 161 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 162:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 163:Src/stm32h7xx_it.c **** 
 164:Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 165:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 7


 166:Src/stm32h7xx_it.c **** 
 167:Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 168:Src/stm32h7xx_it.c **** }
 184              		.loc 1 168 1 view .LVU24
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE356:
 189              		.section	.text.PendSV_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	PendSV_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	PendSV_Handler:
 197              	.LFB357:
 169:Src/stm32h7xx_it.c **** 
 170:Src/stm32h7xx_it.c **** /**
 171:Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 172:Src/stm32h7xx_it.c ****   */
 173:Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 174:Src/stm32h7xx_it.c **** {
 198              		.loc 1 174 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 175:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 176:Src/stm32h7xx_it.c **** 
 177:Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 178:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 179:Src/stm32h7xx_it.c **** 
 180:Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 181:Src/stm32h7xx_it.c **** }
 203              		.loc 1 181 1 view .LVU26
 204 0000 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE357:
 208              		.section	.text.SysTick_Handler,"ax",%progbits
 209              		.align	1
 210              		.global	SysTick_Handler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	SysTick_Handler:
 216              	.LFB358:
 182:Src/stm32h7xx_it.c **** 
 183:Src/stm32h7xx_it.c **** /**
 184:Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 185:Src/stm32h7xx_it.c ****   */
 186:Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 187:Src/stm32h7xx_it.c **** {
 217              		.loc 1 187 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI1:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 8


 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 188:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 189:Src/stm32h7xx_it.c **** 
 190:Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 191:Src/stm32h7xx_it.c ****   HAL_IncTick();
 226              		.loc 1 191 3 view .LVU28
 227 0002 FFF7FEFF 		bl	HAL_IncTick
 228              	.LVL1:
 192:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 193:Src/stm32h7xx_it.c ****   user_code_insert_to_systick_handler();
 229              		.loc 1 193 3 view .LVU29
 230 0006 FFF7FEFF 		bl	user_code_insert_to_systick_handler
 231              	.LVL2:
 194:Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 195:Src/stm32h7xx_it.c **** }
 232              		.loc 1 195 1 is_stmt 0 view .LVU30
 233 000a 08BD     		pop	{r3, pc}
 234              		.cfi_endproc
 235              	.LFE358:
 237              		.section	.text.ADC_IRQHandler,"ax",%progbits
 238              		.align	1
 239              		.global	ADC_IRQHandler
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	ADC_IRQHandler:
 245              	.LFB359:
 196:Src/stm32h7xx_it.c **** 
 197:Src/stm32h7xx_it.c **** /******************************************************************************/
 198:Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 199:Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 200:Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 201:Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 202:Src/stm32h7xx_it.c **** /******************************************************************************/
 203:Src/stm32h7xx_it.c **** 
 204:Src/stm32h7xx_it.c **** /**
 205:Src/stm32h7xx_it.c ****   * @brief This function handles ADC1 and ADC2 global interrupts.
 206:Src/stm32h7xx_it.c ****   */
 207:Src/stm32h7xx_it.c **** void ADC_IRQHandler(void)
 208:Src/stm32h7xx_it.c **** {
 246              		.loc 1 208 1 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI2:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 209:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 210:Src/stm32h7xx_it.c **** 
 211:Src/stm32h7xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 212:Src/stm32h7xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 255              		.loc 1 212 3 view .LVU32
 256 0002 0348     		ldr	r0, .L21
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 9


 257 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 258              	.LVL3:
 213:Src/stm32h7xx_it.c ****   HAL_ADC_IRQHandler(&hadc2);
 259              		.loc 1 213 3 view .LVU33
 260 0008 0248     		ldr	r0, .L21+4
 261 000a FFF7FEFF 		bl	HAL_ADC_IRQHandler
 262              	.LVL4:
 214:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 215:Src/stm32h7xx_it.c **** 
 216:Src/stm32h7xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 217:Src/stm32h7xx_it.c **** }
 263              		.loc 1 217 1 is_stmt 0 view .LVU34
 264 000e 08BD     		pop	{r3, pc}
 265              	.L22:
 266              		.align	2
 267              	.L21:
 268 0010 00000000 		.word	hadc1
 269 0014 00000000 		.word	hadc2
 270              		.cfi_endproc
 271              	.LFE359:
 273              		.section	.text.I2C2_EV_IRQHandler,"ax",%progbits
 274              		.align	1
 275              		.global	I2C2_EV_IRQHandler
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	I2C2_EV_IRQHandler:
 281              	.LFB360:
 218:Src/stm32h7xx_it.c **** 
 219:Src/stm32h7xx_it.c **** /**
 220:Src/stm32h7xx_it.c ****   * @brief This function handles I2C2 event interrupt.
 221:Src/stm32h7xx_it.c ****   */
 222:Src/stm32h7xx_it.c **** void I2C2_EV_IRQHandler(void)
 223:Src/stm32h7xx_it.c **** {
 282              		.loc 1 223 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286 0000 08B5     		push	{r3, lr}
 287              	.LCFI3:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 224:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C2_EV_IRQn 0 */
 225:Src/stm32h7xx_it.c ****   // user_i2cirq_cb(&hi2c2);
 226:Src/stm32h7xx_it.c ****   /* USER CODE END I2C2_EV_IRQn 0 */
 227:Src/stm32h7xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c2);
 291              		.loc 1 227 3 view .LVU36
 292 0002 0248     		ldr	r0, .L25
 293 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 294              	.LVL5:
 228:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C2_EV_IRQn 1 */
 229:Src/stm32h7xx_it.c **** 
 230:Src/stm32h7xx_it.c ****   /* USER CODE END I2C2_EV_IRQn 1 */
 231:Src/stm32h7xx_it.c **** }
 295              		.loc 1 231 1 is_stmt 0 view .LVU37
 296 0008 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 10


 297              	.L26:
 298 000a 00BF     		.align	2
 299              	.L25:
 300 000c 00000000 		.word	hi2c2
 301              		.cfi_endproc
 302              	.LFE360:
 304              		.section	.text.I2C2_ER_IRQHandler,"ax",%progbits
 305              		.align	1
 306              		.global	I2C2_ER_IRQHandler
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 311              	I2C2_ER_IRQHandler:
 312              	.LFB361:
 232:Src/stm32h7xx_it.c **** 
 233:Src/stm32h7xx_it.c **** /**
 234:Src/stm32h7xx_it.c ****   * @brief This function handles I2C2 error interrupt.
 235:Src/stm32h7xx_it.c ****   */
 236:Src/stm32h7xx_it.c **** void I2C2_ER_IRQHandler(void)
 237:Src/stm32h7xx_it.c **** {
 313              		.loc 1 237 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI4:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 238:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C2_ER_IRQn 0 */
 239:Src/stm32h7xx_it.c **** 
 240:Src/stm32h7xx_it.c ****   /* USER CODE END I2C2_ER_IRQn 0 */
 241:Src/stm32h7xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c2);
 322              		.loc 1 241 3 view .LVU39
 323 0002 0248     		ldr	r0, .L29
 324 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 325              	.LVL6:
 242:Src/stm32h7xx_it.c ****   /* USER CODE BEGIN I2C2_ER_IRQn 1 */
 243:Src/stm32h7xx_it.c **** 
 244:Src/stm32h7xx_it.c ****   /* USER CODE END I2C2_ER_IRQn 1 */
 245:Src/stm32h7xx_it.c **** }
 326              		.loc 1 245 1 is_stmt 0 view .LVU40
 327 0008 08BD     		pop	{r3, pc}
 328              	.L30:
 329 000a 00BF     		.align	2
 330              	.L29:
 331 000c 00000000 		.word	hi2c2
 332              		.cfi_endproc
 333              	.LFE361:
 335              		.text
 336              	.Letext0:
 337              		.file 2 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 338              		.file 3 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 339              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 340              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 341              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 342              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 11


 343              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 344              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 345              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 346              		.file 11 "../Common/debuglog/SEGGER_RTT_V792h/RTT/SEGGER_RTT.h"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_it.c
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:19     .text.NMI_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:43     .rodata.HardFault_Handler.str1.4:00000000 $d
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:47     .text.HardFault_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:53     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:78     .text.HardFault_Handler:0000000c $d
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:83     .text.MemManage_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:89     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:106    .text.BusFault_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:112    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:129    .text.UsageFault_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:135    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:152    .text.SVC_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:158    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:171    .text.DebugMon_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:177    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:190    .text.PendSV_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:196    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:209    .text.SysTick_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:215    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:238    .text.ADC_IRQHandler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:244    .text.ADC_IRQHandler:00000000 ADC_IRQHandler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:268    .text.ADC_IRQHandler:00000010 $d
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:274    .text.I2C2_EV_IRQHandler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:280    .text.I2C2_EV_IRQHandler:00000000 I2C2_EV_IRQHandler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:300    .text.I2C2_EV_IRQHandler:0000000c $d
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:305    .text.I2C2_ER_IRQHandler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:311    .text.I2C2_ER_IRQHandler:00000000 I2C2_ER_IRQHandler
C:\Users\zhangge\AppData\Local\Temp\cc2hiWDk.s:331    .text.I2C2_ER_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
SEGGER_RTT_printf
HAL_IncTick
user_code_insert_to_systick_handler
HAL_ADC_IRQHandler
hadc1
hadc2
HAL_I2C_EV_IRQHandler
hi2c2
HAL_I2C_ER_IRQHandler
